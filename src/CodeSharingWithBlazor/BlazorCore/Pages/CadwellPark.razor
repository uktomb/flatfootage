@page "/tracks"
@inject ITrackFootageLoader TrackFootageLoader
<h3>tracks</h3>
<div>
    @foreach (var track in tracks)
    {
        <button value="@track" @onclick="@(() => SelectTrack(track))">@track</button>

    }
</div>

@foreach (var url in urls)
{

    <iframe width="560" height="315" src="https://www.youtube.com/embed/@url" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>


}

@code{

    List<string> tracks;
    List<string> urls;

    protected override async Task OnInitializedAsync()
    {
        urls = await TrackFootageLoader.GetVideos("cadwell");
        tracks = await TrackFootageLoader.GetTracks();
    }

}
@functions
{
    void SelectTrack(string trackName)
    {
        urls = TrackFootageLoader.GetVideos(trackName).Result;
        return;
    }
}
